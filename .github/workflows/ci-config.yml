# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2
      # with:
        # Set always-auth in npmrc
        # always-auth: # optional, default is false
        # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
        # node-version: # optional, default is 10.x
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
        # registry-url: # optional
        # Optional scope for authenticating against scoped registries
        # scope: # optional
        # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
        # version: # optional
        
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Run commands on the job's virtual machine
    - name: Install Dependencies
      run: |
        npm ci

    # Runs all tests in headless mode runners shell
    - name: Run tests
      run: HEADLESS=true npx codeceptjs run --features --reporter mocha-multi

    # Archive test report as an artifact
    - name: Archive test artifacts
      uses: actions/upload-artifact@v1
      with:
        name: functional-output
        path: functional-output

    # Need to host a website for the Allure reporting to work - using mochawesome fallback solution for reporting in interim

